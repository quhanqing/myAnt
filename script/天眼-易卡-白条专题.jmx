<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="天眼-易卡-白条专题-接口测试" enabled="true">
      <stringProp name="TestPlan.comments">接口层面测试T+1离线数据取值正确性校验</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="接口返回数据准确性校验" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1531127205000</longProp>
        <longProp name="ThreadGroup.end_time">1531127205000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="定义测试过程中用的常量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="hostip" elementType="Argument">
              <stringProp name="Argument.name">hostip</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">根据实际测试环境修改</stringProp>
            </elementProp>
            <elementProp name="hostPort" elementType="Argument">
              <stringProp name="Argument.name">hostPort</stringProp>
              <stringProp name="Argument.value">9082</stringProp>
              <stringProp name="Argument.desc">根据实际测试环境修改</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SQL_excel_count" elementType="Argument">
              <stringProp name="Argument.name">SQL_excel_count</stringProp>
              <stringProp name="Argument.value">12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">数据库插入SQL个数</stringProp>
            </elementProp>
            <elementProp name="TestCaseFile" elementType="Argument">
              <stringProp name="Argument.name">TestCaseFile</stringProp>
              <stringProp name="Argument.value">YKBaiTiaoZT</stringProp>
              <stringProp name="Argument.desc">数据库用例文件</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">tangbaofeng</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userPwd" elementType="Argument">
              <stringProp name="Argument.name">userPwd</stringProp>
              <stringProp name="Argument.value">tangbaofeng20161201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sid" elementType="Argument">
              <stringProp name="Argument.name">sid</stringProp>
              <stringProp name="Argument.value">AF8C7A9B-60D5-4256-9021-419A6C309241</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bbh" elementType="Argument">
              <stringProp name="Argument.name">bbh</stringProp>
              <stringProp name="Argument.value">2.0.2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuid" elementType="Argument">
              <stringProp name="Argument.name">uuid</stringProp>
              <stringProp name="Argument.value">0CA54B86D86FD5DAA6E6F673D9191BAC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC 建立数据库连接 10.151.3.12" enabled="true">
          <stringProp name="TestPlan.comments">在测试数据库 10.151.3.12 上完成清库、造数操作</stringProp>
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">bi_jie_baitiao</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://10.151.3.12:3306/bi_jie?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">momo1314</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">tangbaofeng</stringProp>
          <stringProp name="initQuery"></stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="清除数据库历史数据" enabled="true">
          <stringProp name="TestPlan.comments">每次执行脚本数据库会插入新的测试数据，因此先清除上次的测试数据</stringProp>
          <stringProp name="dataSource">bi_jie_baitiao</stringProp>
          <stringProp name="query">TRUNCATE TABLE dw_baitiao_confirm_facility;
TRUNCATE TABLE dw_baitiao_overview;
TRUNCATE TABLE dw_baitiao_plusdata;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="获取目标SQL集合并执行插入操作" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;

// 1、PreparedStatement继承自Statement,都是接口。 
// 2、区别：PreparedStatement可以使用占位符，是预编译的，批处理比Statement效率高.
// 3、String sql=&quot;insert into lover values(?,?,?)&quot;;   ps=conn.prepareStatement(sql);
// 4、执行sql语句   ps.execute();

public void dataCreate(){
	log.info(&quot;========准备初始化测试数据！========&quot;);	
	String urlTest = &quot;jdbc:mysql://10.151.3.12:3306/bi_jie&quot;;
	String dbUserTest = &quot;tangbaofeng&quot;;
	String dbPwdTest = &quot;momo1314&quot;;
	Connection coonTest = null;
	Statement stmt = null;
	// ResultSet rs = null;   
	// 由于执行的全是插入操作，不需要声明和关闭这个ResultSet
	String selectData =&quot;即将开始更新数据库!&quot;;
	log.info(&quot;~~~~~~~~~&quot; + selectData + &quot;~~~~~~~~~~&quot;);
	try{
		connTest = DriverManager.getConnection(urlTest, dbUserTest, dbPwdTest);
		log.info(&quot;连接的数据库是：&quot; + connTest +&quot;\n&quot;);
          stmt = connTest.createStatement();
          TreeSet sqls = vars.getObject(&quot;SQLS&quot;);
          Iterator iterator = sqls.iterator();
            int i=0;
            while (iterator.hasNext()) {
                i++;
                String sql = iterator.next().toString();
                log.info(&quot;打印将要插入的SQL语句：&quot;+sql);
                log.info(sql);
                stmt.executeUpdate(sql);
                log.info(&quot;插入第&quot; + i + &quot;条测试数据&quot; + &quot;\n&quot;);
            }
		  //connTest.commit();
	       log.info(&quot;~~~~~~~测试数据库相关表数据更新成功！~~~~~~~&quot; + &quot;\n&quot;);
		}catch(Exception e){
			e.printStackTrace();
			}
	finally{
		if(stmt!=null)
		try{ stmt.close();
			}catch(Exception e){
				e.printStackTrace();
				}
		if(connTest!=null)
		try{ connTest.close();
			}catch(Exception e){
				e.printStackTrace();
				}
    }
}
dataCreate();


</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取指定日期和格式的时间字符串" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public void initDate(){

//【易卡-白条专题】的T+1离线数据插入日期都是程序执行日期的前一天 Yesterday、比前一天再早一天 YesterdayEarly
// 上月的同天 LastMonth 、比上月同一天再早一天 LastMonthEarly  ==  用于计算近60天的申请提现用户分析
//【易卡-白条专题】的落库数据时间戳是标准的年月日格式，可以采取灵活的系统时间去计算
     
     log.info(&quot;\n&quot;);
     log.info(&quot;=====初始化：接口需要的所有日期参数、SQL语句需要替换的日期变量=====&quot;);
	SimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
	
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(new Date());
	calendar.add(Calendar.DAY_OF_MONTH,-1);  //获取查询日的时间T+1也就是昨天
	Date d = calendar.getTime();
	String date = df.format(d); 
	log.info(&quot;系统T+1的时间是：&quot;+ date);
	vars.put(&quot;Yesterday&quot;,date);  //获取具体年月日格式 2018-04-03

//获取 T+1 所在月份的天数,【白条综述接口】的T+1离线数据在每月的第一天，当日和当月是完全一致的
//检查当前T+1的时间是否为月初1号，如果当前T+1的时间是1号，则【白条综述接口】当月和当天的指标数值是完全一样的.
	int dayCount = calendar.get(Calendar.DATE); 
	String dayOfMonth = String.valueOf(dayCount); //将 int 强转成 String
	log.info(&quot;获取T+1所在月份的天数是：&quot;+ dayOfMonth);
	vars.put(&quot;DayOfMonth&quot;,dayOfMonth);  //获取具体所在月份的天数格式 4,6,16
	
     Calendar calendar1 = Calendar.getInstance();
	calendar1.setTime(new Date());
	calendar1.add(Calendar.DAY_OF_MONTH,-2);  //获取T+1的前一天也就是前天
	Date d1 = calendar1.getTime();
	String date1 = df.format(d1); 
	log.info(&quot;系统T+1的更早时间是：&quot;+date1);
     vars.put(&quot;YesterdayEarly&quot;,date1); //获取月份格式 2018-04-02

     Calendar calendar2 = Calendar.getInstance();
	calendar2.setTime(new Date());
	calendar2.add(Calendar.MONTH,-1);  //获取T+1的上月同天
	calendar2.add(Calendar.DAY_OF_MONTH,-1);
	Date d2 = calendar2.getTime();
	String date2 = df.format(d2); 
	log.info(&quot;系统T+1的上月时间是：&quot;+date2);
     vars.put(&quot;LastMonth&quot;,date2); //获取年格式 2018-03-03

     Calendar calendar3 = Calendar.getInstance();
	calendar3.setTime(new Date());
	calendar3.add(Calendar.MONTH,-1);  
	calendar3.add(Calendar.DAY_OF_MONTH,-2);  //获取T+1的上月同天的前一天
	Date d3 = calendar3.getTime();
	String date3 = df.format(d3); 
	log.info(&quot;系统T+1的上月更早时间是：&quot;+date3);
     vars.put(&quot;LastMonthEarly&quot;,date3); //获取年格式 2018-03-02

    //用于获取提现用户数分布数据
    //获取T+1的前30天的日期，如 今天是 2018-07-17，T+1 是 2018-07-16 目标日期= 2018-07-16 -30天
     Calendar calendar4 = Calendar.getInstance();
	calendar4.setTime(new Date());
	calendar4.add(Calendar.DAY_OF_MONTH,-30);  // 测试当日是当月1号：calendar4.add(Calendar.DAY_OF_MONTH,-31-(T+1)+1);  
	Date d4 = calendar4.getTime();
	String date4 = df.format(d4); 
	log.info(&quot;T+1-30天的时间是：&quot;+ date4 +&quot;\n&quot;);
     vars.put(&quot;ThirtyTime&quot;,date4); //获取年格式 2018-06-16
	}
initDate();  // 注意别漏掉调用方法，否则后面接口传参数会失败</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置用例的执行路径" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.services.FileServer;

// JMeter在使用文件的时候有个不成文的规定，那就是如果指定的文件名称中不带任何路径的话(相对路径)，那么JMeter就会从运行的脚本所在的目录中去寻找指定的文件。
// 如果用户指定的不带路径的文件名，那么就会从脚本所在的目录进行寻找。
// 好处在于:该脚本是跨操作系统、跨机器的，不同的用户在使用该脚本的时候避免必须建立一样的目录、文件结构，只需要保证使用到的文件和脚本在同一个目录下即可，这显然比指定了绝对路径更加具有可移植性。
// JMeter提供的org.apache.jmeter.services.FileServer提供的方法FileServer.getFileServer().getBaseDir()就能够得到脚本所在的目录。

public void getTestCaseFilePath(){
	
	log.info(&quot;========设置用例的执行路径========&quot;);
	String file = vars.get(&quot;TestCaseFile&quot;);
	log.info(&quot;用例的文件名称为：&quot;+file);
	FileServer fs =  FileServer.getFileServer();
	String jmterPath = fs.getBaseDir();
	log.info(&quot;脚本所在的目录为：&quot;+jmterPath);
	String TestCaseFilePath = jmterPath + &quot;\\&quot; + file +&quot;.xlsx&quot;;
	log.info(&quot;测试用例脚本所在的目录为：&quot;+TestCaseFilePath+&quot;\n&quot;);	
	vars.put(&quot;TestCaseFilePath&quot;,TestCaseFilePath);
	}
	
getTestCaseFilePath();</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="定义用例文件的sheet名和数据库名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">public void getFileMessage(){
	String sheetOne = &quot;dw_baitiao_confirm_facility&quot;;
     vars.put(&quot;sheetOne&quot;,sheetOne);
     String sheetTwo = &quot;dw_baitiao_overview&quot;;
     vars.put(&quot;sheetTwo&quot;,sheetTwo);
     String sheetThree = &quot;dw_baitiao_plusdata&quot;;
     vars.put(&quot;sheetThree&quot;,sheetThree);
     String dataDBName = &quot;bi_jie&quot;;
     vars.put(&quot;dataDBName&quot;,dataDBName);
	}
getFileMessage();</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="多次读取用例文件并返回SQL集合" enabled="true">
            <stringProp name="TestPlan.comments">多次调用读取用例文件的公共方法并返回SQL集合</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.ResultSet;

 public static TreeSet readSqlsFromExcel(String filepath, String sheet, String dbName) throws Exception {
        String Yesterday = vars.get(&quot;Yesterday&quot;);
        String YesterdayEarly =  vars.get(&quot;YesterdayEarly&quot;);
        String LastMonth =  vars.get(&quot;LastMonth&quot;);
        String LastMonthEarly =  vars.get(&quot;LastMonthEarly&quot;);
        FileInputStream fis = new FileInputStream(filepath);
        BufferedReader reader = new BufferedReader(new InputStreamReader(fis));
        XSSFWorkbook xssfWorkbook = new XSSFWorkbook(fis);
        XSSFSheet xssfSheet = xssfWorkbook.getSheet(sheet);
        log.info(&quot;需要操作的数据库名.表名为:&quot; + dbName + &quot;.&quot; + sheet);
        TreeSet sqls = new TreeSet();
        int rowNum = xssfSheet.getPhysicalNumberOfRows();
        int coloumNum = xssfSheet.getRow(0).getPhysicalNumberOfCells();
        StringBuilder collumes = new StringBuilder(&quot;&quot;);
        for (int i = 1; i &lt; rowNum; i++) { //第一行为表头，不取，从第一列的第二行开始取字段名称并用，连接
            collumes.append(xssfSheet.getRow(i).getCell(0).toString()).append(&quot;,&quot;);
        }
        for (int c = 1; c &lt; coloumNum; c++) {
            //第一列是字段名称，不插入
            StringBuilder values = new StringBuilder(&quot;&quot;);
            for (int r = 1; r &lt; rowNum; r++) {
                String value = xssfSheet.getRow(r).getCell(c).toString();
                if (&quot;&quot;.equals(value)) {
                    values.append(&quot;NULL&quot;).append(&quot;,&quot;);
                } else if (&quot;空格&quot;.equals(value)) {
                    values.append(&quot;&apos;&quot;).append(&quot;  &quot;).append(&quot;&apos;,&quot;);
                } else if (&quot;空字符串&quot;.equals(value)) {
                    values.append(&quot;&apos;&apos;,&quot;);
                } else if (&quot;Yesterday&quot;.equals(value)) {
                    values.append(&quot;&apos;&quot;).append(Yesterday).append(&quot;&apos;,&quot;);
                } else if (&quot;YesterdayEarly&quot;.equals(value)) {
                    values.append(&quot;&apos;&quot;).append(YesterdayEarly).append(&quot;&apos;,&quot;);
                } else if (&quot;LastMonth&quot;.equals(value)) {
                    values.append(&quot;&apos;&quot;).append(LastMonth).append(&quot;&apos;,&quot;);
                } else if (&quot;LastMonthEarly&quot;.equals(value)) {
                    values.append(&quot;&apos;&quot;).append(LastMonthEarly).append(&quot;&apos;,&quot;);
                } else {
                    values.append(&quot;&apos;&quot;).append(value).append(&quot;&apos;,&quot;);
                }
            }
            String sql = &quot;INSERT INTO &quot; + dbName + &quot;.&quot; + sheet + &quot;(&quot; + collumes.substring(0, collumes.length() - 1)
                    + &quot;) VALUES (&quot; + values.substring(0, values.length() - 1) + &quot;);&quot;;
            //log.info(sql);
            sqls.add(sql);
        }
        reader.close();
        fis.close();
        return sqls;
    }

TreeSet sqls = new TreeSet();
String TestCaseFilePath = vars.get(&quot;TestCaseFilePath&quot;);
String dataDBName = vars.get(&quot;dataDBName&quot;);
sqls.addAll(readSqlsFromExcel(TestCaseFilePath, vars.get(&quot;sheetOne&quot;), dataDBName));
sqls.addAll(readSqlsFromExcel(TestCaseFilePath, vars.get(&quot;sheetTwo&quot;), dataDBName));
sqls.addAll(readSqlsFromExcel(TestCaseFilePath, vars.get(&quot;sheetThree&quot;), dataDBName));
log.info(&quot;========用例拼装成SQL集合成功！========&quot;+&quot;\n&quot;);
vars.putObject(&quot;SQLS&quot;,sqls);




    </stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="将 T+1 及 T+1 所在月份的天 设置成全局变量" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">${__setProperty(edate,${Yesterday},)}
${__setProperty(dayCount,${DayOfMonth},)}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie 管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">保证后续的多次请求都能正常获取结果</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="调取登录页login.html" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
              </elementProp>
              <elementProp name="bbh" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bbh}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bbh</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${localhost}</stringProp>
          <stringProp name="HTTPSampler.port">${9082}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/login.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">获取天眼移动端登录界面URL(因为本地没有配置nginx所以会报错，但是此步骤可以省略，此步骤只是为了获取录制的 token 中的 sid)</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="模拟登陆(HTTP请求)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${userName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">userName</stringProp>
              </elementProp>
              <elementProp name="userPwd" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${userPwd}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">userPwd</stringProp>
              </elementProp>
              <elementProp name="sid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sid</stringProp>
              </elementProp>
              <elementProp name="bbh" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bbh}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bbh</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/dologin.gm?uuid=3ED3531ED77FBB8C3077BF1202BE95EA</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">实现用户登录存储对应的Cookie信息 /app/dologin.gm?uuid=3ED3531ED77FBB8C3077BF1202BE95EA HTTP/1.1</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【订单金额】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="uuid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${uuid}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">uuid</stringProp>
              </elementProp>
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">amount</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_amt_daily_yes ( 总体-订单金额-日-含退单 )" enabled="true">
            <stringProp name="VAR">total_amt_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKaAmount_daily_yes ( 易卡-订单金额-日-含退单 )" enabled="true">
            <stringProp name="VAR">yiKaAmount_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gomeAmount_daily_yes ( 国美-订单金额-日-含退单 )" enabled="true">
            <stringProp name="VAR">gomeAmount_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_amt_daily_yes ( 饼图标题-日-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_amt_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_typeDistributions_list_daily_yes ( 订单金额-饼图占比分布-日-含退单 )" enabled="true">
            <stringProp name="VAR">amt_typeDistributions_list_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_dataList_list_daily_yes ( 订单金额-息费及占比-日-含退单 )" enabled="true">
            <stringProp name="VAR">amt_dataList_list_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比1（js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="1、总体-订单金额-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	// 总体-订单金额-日-含退单 = 当日分产品的订单金额（total_contract_value）之和 
	// (9657+1599+12124+46272+294021+7986+50889)/10000 = 422548/10000 = 42.25
	var interfaceValue_total_amount = ${total_amt_daily_yes};
	log.info(&quot;总体-订单金额-日-含退单:&quot;+interfaceValue_total_amount);
	return interfaceValue_total_amount == &apos;42.25&apos;;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="2、易卡-订单金额-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_yiKa_amount = ${yiKaAmount_daily_yes};
	log.info(&quot;易卡-订单金额-日-含退单:&quot;+interface_yiKa_amount);
	
	// 易卡-订单金额-日-含退单 = 当日易卡产品的订单金额（total_contract_value）之和 
	// (12124+46272+294021+50889)/10000 = 403306/10000 = 40.33
	var actural_result = &quot;40.33&quot;;
	return interface_yiKa_amount == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="3、国美-订单金额-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_gome_amount = ${gomeAmount_daily_yes};
	log.info(&quot;国美-订单金额-日-含退单:&quot;+interface_gome_amount);
	
	// 国美-订单金额-日-含退单 = 当日国美产品的订单金额（total_contract_value）之和 
	// (9657+1599+7986)/10000 = 19242/10000 = 1.92
	var actural_result = 1.92;
	return interface_gome_amount == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="4、饼图标题-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_indexName_amt_daily_yes = &quot;${indexName_amt_daily_yes}&quot;;
	log.info(&quot;饼图标题-日-含退单:&quot;+interface_indexName_amt_daily_yes);
	
// 注意如果通过变量赋值，实际结果带中文或者特殊字符括号等一定要在外层加上&quot;&quot;
// 普通的返回数值类型的则不需要，如：var interfaceValue_total_amount = ${total_amt_daily_yes};
// 返回值为数值市：不加引号、加单引号、加双引号  三种方式都可以

	var actural_result = &quot;订单金额(万元)&quot;;
	return interface_indexName_amt_daily_yes == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="5、订单金额-饼图占比分布-日-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_typeDistributions_list_daily_yes};
	//接口返回的数组,2个元素,每一个元素是json对象,每一个元素包含2个键值对
     //[{&quot;name&quot;:&quot;易卡 95.45%&quot;,&quot;value&quot;:&quot;403306&quot;},{&quot;name&quot;:&quot;国美在线 4.55%&quot;,&quot;value&quot;:&quot;35212.33&quot;}] 
	
	var interfaceArray = JSON.stringify(interfaceResult);  // 转换成字符串便于打印日志
     log.info(&quot;转换并解析json对象得到【订单金额-饼图占比分布-日-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_typeDistributions_list_daily_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
		//log.info(&quot;key[&quot;+[i]+&quot;]:=&quot;+key);
          //log.info(&quot;数组角标为&quot;+[i]+&quot;的元素是：&quot;+JSON.stringify(interfaceResult[i])); 
          var interface_key_value = interfaceResult[i].value;
		//log.info(&quot;interfaceArray[&quot;+[i]+&quot;]:&quot;+interfaceResult[i].name+&quot;=&quot;+ interface_key_value);
		var actural_key_value = expectedResultMap[key];
		//log.info(&quot;expectedResultMap[&quot;+[i]+&quot;]:&quot;+key+&quot;=&quot; + actural_key_value);      
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_typeDistributions_list_daily_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单金额 = 422548/10000 = 42.25
// 易卡-订单金额 = (12124+46272+294021+50889)/10000 = 403306/10000 = 40.33   占比：403306/422548=0.95446=95.45%
// 国美-订单金额 = (9657+1599+7986)/10000 = 19242/10000 = 1.92   占比：19242/422548=0.04553=4.55%&lt;1/12=8.33%  所以接口传值为 422548/12=35212.33
// 移动端饼图有个规则，如果所传递的指标数值小于总值的 1/12=8.33% ，则接口传值设置为1/12，百分比是按实际值来计算，否则前端饼图显示不美观

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;易卡 95.45%&quot;,&quot;403306&quot;);
expectedMap.put(&quot;国美在线 4.55%&quot;,&quot;35212.33&quot;);

vars.putObject(&quot;amt_typeDistributions_list_daily_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="6、订单金额-息费及占比-日-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_dataList_list_daily_yes};
//接口返回的数组,3个元素,每一个元素是json对象,每一个元素包含4个键值对:index 作为 key ,freeInterest-interest-freeRate 作为 value .
//[{&quot;freeRate&quot;:&quot;25.66%&quot;,&quot;freeInterest&quot;:&quot;10.84&quot;,&quot;interest&quot;:&quot;31.41&quot;,&quot;index&quot;:&quot;订单金额&quot;},{&quot;freeRate&quot;:&quot;24.09%&quot;,&quot;freeInterest&quot;:&quot;9.72&quot;,&quot;interest&quot;:&quot;30.61&quot;,&quot;index&quot;:&quot;易卡&quot;},{&quot;freeRate&quot;:&quot;58.50%&quot;,&quot;freeInterest&quot;:&quot;1.13&quot;,&quot;interest&quot;:&quot;0.8&quot;,&quot;index&quot;:&quot;国美在线&quot;}] 
	
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-息费及占比-日-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot; + interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_dataList_list_daily_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
		//log.info(&quot;key[&quot;+[i]+&quot;]:=&quot;+key);
          //log.info(&quot;数组角标为&quot;+[i]+&quot;的元素是：&quot;+JSON.stringify(interfaceResult[i])); 
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		//log.info(&quot;interfaceArray[&quot;+[i]+&quot;]:&quot;+interfaceResult[i].index+&quot;=&quot;+ interface_key_value);
		var actural_key_value = expectedResultMap[key];
		//log.info(&quot;expectedResultMap[&quot;+[i]+&quot;]:&quot;+key+&quot;=&quot; + actural_key_value);      
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单金额】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_dataList_list_daily_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单金额: 422548
// 总体-订单金额（有息费）= 12124+294021+7986 = 314131    总体-订单金额（免息费）= 9657+1599+46272+50889 = 108417  免息占比：108417/(108417+314131)=25.66%
// 易卡-订单金额（有息费）= 12124+294021 = 306145         易卡-订单金额（免息费）= 46272+50889 = 97161    免息占比：97161/(97161+306196)=24.09%
// 国美-订单金额（有息费）= 7986                          国美-订单金额（免息费）= 9657+1599 = 11256   免息占比：11256/(11256+7986)=58.50%
// 产品作为 key ，免息-有息-免息占比 作为 value

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;订单金额&quot;,&quot;10.84-31.41-25.66%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;9.72-30.61-24.09%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;1.13-0.8-58.50%&quot;);

vars.putObject(&quot;amt_dataList_list_daily_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【订单金额】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">amount</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_amt_daily_no ( 总体-订单金额-日-不含退单 )" enabled="true">
            <stringProp name="VAR">total_amt_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKaAmount_daily_no ( 易卡-订单金额-日-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKaAmount_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gomeAmount_daily_no ( 国美-订单金额-日-不含退单 )" enabled="true">
            <stringProp name="VAR">gomeAmount_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_amt_daily_no ( 饼图标题-日-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_amt_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_typeDistributions_list_daily_no ( 订单金额-饼图占比分布-日-不含退单 )" enabled="true">
            <stringProp name="VAR">amt_typeDistributions_list_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_dataList_list_daily_no ( 订单金额-息费及占比-日-不含退单 )" enabled="true">
            <stringProp name="VAR">amt_dataList_list_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比2（js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="7、总体-订单金额-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	// 总体-订单金额-日-不含退单 = 当日分产品的订单金额（rel_contract_value）之和 
	// (9657+294021+7986+50889)/10000 = 362553/10000 = 36.26
	var interfaceValue_total_amount = ${total_amt_daily_no};
	log.info(&quot;总体-订单金额-日-不含退单:&quot;+interfaceValue_total_amount);
	return interfaceValue_total_amount == &apos;36.26&apos;;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="8、易卡-订单金额-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_yiKa_amount = ${yiKaAmount_daily_no};
	log.info(&quot;易卡-订单金额-日-不含退单:&quot;+interface_yiKa_amount);
	
	// 易卡-订单金额-日-含退单 = 当日易卡产品的订单金额（rel_contract_value）之和 
	// (294021+50889)/10000 = 344910/10000 = 34.49
	var actural_result = &quot;34.49&quot;;
	return interface_yiKa_amount == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="9、国美-订单金额-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_gome_amount = ${gomeAmount_daily_no};
	log.info(&quot;国美-订单金额-日-不含退单:&quot;+interface_gome_amount);
	
	// 国美-订单金额-日-含退单 = 当日国美产品的订单金额（rel_contract_value）之和 
	// (9657+7986)/10000 = 17643/10000 = 1.76
	var actural_result = 1.76;
	return interface_gome_amount == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="10、饼图标题-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_indexName_amt_daily_no = &quot;${indexName_amt_daily_no}&quot;;
	log.info(&quot;饼图标题-日-不含退单:&quot;+interface_indexName_amt_daily_no);
	var actural_result = &quot;订单金额(万元)&quot;;
	return interface_indexName_amt_daily_no == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="11、订单金额-饼图占比分布-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_typeDistributions_list_daily_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-饼图占比分布-日-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_typeDistributions_list_daily_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key]; 
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_typeDistributions_list_daily_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单金额 = 362553/10000 = 36.26
// 易卡-订单金额 = (294021+50889)/10000 = 344910/10000 = 34.49   占比：95.13%
// 国美-订单金额 = (9657+7986)/10000 = 17643/10000 = 1.76   占比：4.87%&lt;1/12=8.33%  所以接口传值为 362553/12=30212.75
// 移动端饼图有个规则，如果所传递的指标数值小于总值的 1/12=8.33% ，则接口传值设置为1/12，百分比是按实际值来计算

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;易卡 95.13%&quot;,&quot;344910&quot;);
expectedMap.put(&quot;国美在线 4.87%&quot;,&quot;30212.75&quot;);

vars.putObject(&quot;amt_typeDistributions_list_daily_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="12、订单金额-息费及占比-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_dataList_list_daily_no};
	//接口返回的数组,2个元素，每一个元素是json对象,每一个元素包含4个键值对，index作为key freeInterest-interest-freeRate作为value
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-息费及占比-日-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_dataList_list_daily_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];  
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单金额】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_dataList_list_daily_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单金额: 362553
// 总体-订单金额（有息费）= 294021+7986 = 302007    总体-订单金额（免息费）= 9657+50889 = 60546  免息占比：60546/362553=16.70%
// 易卡-订单金额（有息费）= 294021                  易卡-订单金额（免息费）= 50889    免息占比：50889/(50889+294021)=14.75%
// 国美-订单金额（有息费）= 7986                    国美-订单金额（免息费）= 9657     免息占比：54.74%
// 产品作为 key ，免息-有息-免息占比 作为 value

HashMap expectedMap = new HashMap();
//key:免息-有息-免息占比
expectedMap.put(&quot;订单金额&quot;,&quot;6.05-30.2-16.70%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;5.09-29.4-14.75%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;0.97-0.8-54.74%&quot;);

vars.putObject(&quot;amt_dataList_list_daily_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【订单件数】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">count</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_count_daily_yes ( 总体-订单件数-日-含退单 )" enabled="true">
            <stringProp name="VAR">total_count_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_count_daily_yes ( 易卡-订单件数-日-含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_count_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_count_daily_yes ( 国美-订单件数-日-含退单 )" enabled="true">
            <stringProp name="VAR">gome_count_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_count_daily_yes ( 饼图标题-日-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_count_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_typeDistributions_list_daily_yes ( 订单件数-饼图占比分布-日-含退单 )" enabled="true">
            <stringProp name="VAR">count_typeDistributions_list_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_dataList_list_daily_yes ( 订单件数-息费及占比-日-含退单 )" enabled="true">
            <stringProp name="VAR">count_dataList_list_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比3（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="13、总体-订单件数-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
// 总体-订单笔数-日-含退单 = 当日分产品的订单笔数（total_loan_num）之和  = 3+1+4+6+81+2+12 = 109
String interfaceValue_total_count = ${total_count_daily_yes};
log.info(&quot;总体-订单件数-日-含退单:&quot;+interfaceValue_total_count);
Assert.assertEquals(interfaceValue_total_count,109,&quot;总体-订单件数-日-含退单-接口取值错误：&quot;+interfaceValue_total_count);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="14、易卡-订单件数-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-订单金额-日-含退单 = 当日易卡产品的订单金额（total_loan_num）之和 = 4+6+81+12 = 103
String  interface_yiKa_count = &quot;${yiKa_count_daily_yes}&quot;;  //注意如果为数值要加引号同时加不加全部去掉
log.info(&quot;易卡-订单件数-日-含退单:&quot;+interface_yiKa_count);
Assert.assertEquals(interface_yiKa_count,&quot;103&quot;,&quot;易卡-订单件数-日-含退单-指标取值错误：&quot;+interface_yiKa_count);
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="15、国美-订单件数-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-订单金额-日-含退单 = 当日国美产品的订单金额（total_loan_num）之和 = 3+1+2=6
String interface_gome_count = ${gome_count_daily_yes};
log.info(&quot;国美-订单件数-日-含退单:&quot;+interface_gome_count);
Assert.assertEquals(interface_gome_count,6,&quot;国美-订单件数-日-含退单-接口取值错误:&quot;+interface_gome_count);	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="16、饼图标题-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_count_daily_yes = &quot;${indexName_count_daily_yes}&quot;;
log.info(&quot;饼图标题-日-含退单:&quot;+interface_indexName_count_daily_yes);
Assert.assertEquals(interface_indexName_count_daily_yes,&quot;订单件数&quot;,&quot;饼图标题-日-含退单-接口取值错误：&quot;+interface_indexName_count_daily_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="17、订单件数-饼图占比分布-日-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_typeDistributions_list_daily_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-饼图占比分布-日-含退单】&quot;+interfaceArray);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_typeDistributions_list_daily_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_typeDistributions_list_daily_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单笔数-含退单 = 109
// 易卡-订单笔数-含退单 = 103   占比：94.50%
// 国美-订单笔数-含退单 = 6  占比：6/109=5.50%&lt;1/12=8.33%  所以接口传值为 109/12=9.08

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;易卡 94.50%&quot;,&quot;103&quot;);
expectedMap.put(&quot;国美在线 5.50%&quot;,&quot;9.08&quot;);

vars.putObject(&quot;count_typeDistributions_list_daily_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="18、订单件数-息费及占比-日-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_dataList_list_daily_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-息费及占比-日-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_dataList_list_daily_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单件数】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_dataList_list_daily_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单笔数-含退单 = 109  总体-订单笔数 （免息费）= 22  免息占比：22/109=20.18%
// 易卡-订单笔数-含退单 = 103  易卡-订单笔数 （免息费）= 18  免息占比：18/103=17.48%
// 国美-订单笔数-含退单 = 6    国美-订单笔数 （免息费）= 4   免息占比：4/6=66.67%
// 产品作为 key ，免息-有息-免息占比 作为 value

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;订单件数&quot;,&quot;22-87-20.18%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;18-85-17.48%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;4-2-66.67%&quot;);

vars.putObject(&quot;count_dataList_list_daily_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【订单件数】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">count</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_count_daily_no ( 总体-订单件数-日-不含退单 )" enabled="true">
            <stringProp name="VAR">total_count_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_count_daily_no ( 易卡-订单件数-日-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_count_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_count_daily_no ( 国美-订单件数-日-不含退单 )" enabled="true">
            <stringProp name="VAR">gome_count_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_count_daily_no ( 饼图标题-日-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_count_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_typeDistributions_list_daily_no ( 订单件数-饼图占比分布-日-不含退单 )" enabled="true">
            <stringProp name="VAR">count_typeDistributions_list_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_dataList_list_daily_no ( 订单件数-息费及占比-日-不含退单 )" enabled="true">
            <stringProp name="VAR">count_dataList_list_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比4（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="19、总体-订单件数-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
// 总体-订单笔数-日-含退单 = 当日分产品的订单笔数（rel_loan_num）之和  = 3+81+2+12 = 98
String interfaceValue_total_count = ${total_count_daily_no};
log.info(&quot;总体-订单件数-日-不含退单:&quot;+interfaceValue_total_count);
Assert.assertEquals(interfaceValue_total_count,98,&quot;总体-订单件数-日-不含退单-接口取值错误：&quot;+interfaceValue_total_count);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="20、易卡-订单件数-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-订单金额-日-含退单 = 当日易卡产品的订单金额（rel_loan_num）之和 = 81+12 = 93
String  interface_yiKa_count = &quot;${yiKa_count_daily_no}&quot;;  //注意要加引号同时加不加全部去掉
log.info(&quot;易卡-订单件数-日-不含退单:&quot;+interface_yiKa_count);
Assert.assertEquals(interface_yiKa_count,&quot;93&quot;,&quot;易卡-订单件数-日-不含退单-指标取值错误：&quot;+interface_yiKa_count);
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="21、国美-订单件数-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-订单金额-日-含退单 = 当日国美产品的订单金额（rel_loan_num）之和 = 3+2 =5
String interface_gome_count = ${gome_count_daily_no};
log.info(&quot;国美-订单件数-日-不含退单:&quot;+interface_gome_count);
Assert.assertEquals(interface_gome_count,5,&quot;国美-订单件数-日-不含退单-接口取值错误:&quot;+interface_gome_count);	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="22、饼图标题-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_count_daily_no = &quot;${indexName_count_daily_no}&quot;;
log.info(&quot;饼图标题-日-不含退单:&quot;+interface_indexName_count_daily_no);
Assert.assertEquals(interface_indexName_count_daily_no,&quot;订单件数&quot;,&quot;饼图标题-日-不含退单-接口取值错误：&quot;+interface_indexName_count_daily_no);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="23、订单件数-饼图占比分布-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_typeDistributions_list_daily_no};
	var interfaceArray = JSON.stringify(interfaceResult);  
     log.info(&quot;转换并解析json对象得到【订单件数-饼图占比分布-日-不含退单】&quot;);
      log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_typeDistributions_list_daily_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_typeDistributions_list_daily_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单笔数-不含退单 = 98
// 易卡-订单笔数-不含退单 = 93  占比：94.90%
// 国美-订单笔数-不含退单 = 5   占比：5/98=5.10%&lt;1/12=8.33%  所以接口传值为 98/12=8.17

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;易卡 94.90%&quot;,&quot;93&quot;);
expectedMap.put(&quot;国美在线 5.10%&quot;,&quot;8.17&quot;);

vars.putObject(&quot;count_typeDistributions_list_daily_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="24、订单件数-息费及占比-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_dataList_list_daily_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-息费及占比-日-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_dataList_list_daily_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];   
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单件数】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_dataList_list_daily_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 总体-订单笔数-不含退单(有息) = 83   总体-订单笔数 （免息费）= 15  免息占比：15/98=15.31%
// 易卡-订单笔数-不含退单(有息) = 81   易卡-订单笔数 （免息费）= 12  免息占比：12/93=12.90%
// 国美-订单笔数-不含退单(有息) = 2    国美-订单笔数 （免息费）= 3   免息占比：3/5=60.00%
// 产品作为 key ，免息-有息-免息占比 作为 value

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;订单件数&quot;,&quot;15-83-15.31%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;12-81-12.90%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;3-2-60.00%&quot;);

vars.putObject(&quot;count_dataList_list_daily_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【件均】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">avg</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_avg_daily_yes ( 总体-件均-日-含退单 )" enabled="true">
            <stringProp name="VAR">total_avg_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_avg_daily_yes ( 易卡-件均-日-含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_avg_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_avg_daily_yes ( 国美-件均-日-含退单 )" enabled="true">
            <stringProp name="VAR">gome_avg_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_avg_daily_yes ( 饼图标题-日-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_avg_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="avg_dataList_list_daily_yes ( 件均-息费-日-不含退单 )" enabled="true">
            <stringProp name="VAR">avg_dataList_list_daily_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比5（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="25、总体-件均-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
// 总体-件均-日-含退单 = 当日分产品的订单金额/订单笔数 = 422548/109=3976.5871 /10000=0.39
String interfaceValue_total_avg_daily_yes = ${total_avg_daily_yes};
log.info(&quot;总体-件均-日-含退单:&quot;+interfaceValue_total_avg_daily_yes);
Assert.assertEquals(interfaceValue_total_avg_daily_yes,0.39,&quot;总体-件均-日-含退单-接口取值错误：&quot;+interfaceValue_total_avg_daily_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="26、易卡-件均-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-件均-日-含退单 = 当日易卡产品的订单金额/订单笔数 = 403306/103 = 3915.5922 /10000=0.39
String  interface_yiKa_avg_daily_yes = &quot;${yiKa_avg_daily_yes}&quot;;
log.info(&quot;易卡-件均-日-含退单:&quot;+interface_yiKa_avg_daily_yes);
Assert.assertEquals(interface_yiKa_avg_daily_yes,&quot;0.39&quot;,&quot;易卡-件均-日-含退单-指标取值错误：&quot;+interface_yiKa_avg_daily_yes);
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="27、国美-件均-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-件均-日-含退单 = 当日国美产品的订单金额/订单笔数 = 19242/6 = 3207 /10000=0.32
String interface_gome_avg_daily_yes = ${gome_avg_daily_yes};
log.info(&quot;国美-件均-日-含退单:&quot;+interface_gome_avg_daily_yes);
Assert.assertEquals(interface_gome_avg_daily_yes,0.32,&quot;国美-件均-日-含退单-接口取值错误:&quot;+interface_gome_avg_daily_yes);	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="28、饼图标题-日-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_avg_daily_yes = &quot;${indexName_avg_daily_yes}&quot;;
log.info(&quot;饼图标题-日-含退单:&quot;+interface_indexName_avg_daily_yes);
Assert.assertEquals(interface_indexName_avg_daily_yes,&quot;订单件均(万元)&quot;,&quot;饼图标题-日-含退单-接口取值错误：&quot;+interface_indexName_avg_daily_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="29、订单件均-分息费-日-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${avg_dataList_list_daily_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件均-分息费-日-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;avg_dataList_list_daily_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeInterest ;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单件均】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="avg_dataList_list_daily_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 件均 = 总金额/总件数 分息费

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;订单件均&quot;,&quot;0.36-0.49&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;0.36-0.54&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;0.4-0.28&quot;);

vars.putObject(&quot;avg_dataList_list_daily_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当日】-【件均】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">day</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">avg</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_avg_daily_no ( 总体-件均-日-不含退单 )" enabled="true">
            <stringProp name="VAR">total_avg_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_avg_daily_no ( 易卡-件均-日-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_avg_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_avg_daily_no ( 国美-件均-日-不含退单 )" enabled="true">
            <stringProp name="VAR">gome_avg_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_avg_daily_no ( 饼图标题-日-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_avg_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="avg_dataList_list_daily_no ( 件均-息费-日-不含退单 )" enabled="true">
            <stringProp name="VAR">avg_dataList_list_daily_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比6（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="30、总体-件均-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 	

// 总体-件均-日-不含退单 = 当日分产品的订单金额/订单笔数
String interfaceValue_total_avg_daily_no = ${total_avg_daily_no};
log.info(&quot;总体-件均-日-不含退单:&quot;+interfaceValue_total_avg_daily_no);
Assert.assertEquals(interfaceValue_total_avg_daily_no,0.37,&quot;总体-件均-日-不含退单-接口取值错误：&quot;+interfaceValue_total_avg_daily_no);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="31、易卡-件均-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-件均-日-不含退单 = 当日易卡产品的订单金额/订单笔数 = 403306/103 = 3915.5922 /10000=0.39
String  interface_yiKa_avg_daily_no = &quot;${yiKa_avg_daily_no}&quot;;
log.info(&quot;易卡-件均-日-不含退单:&quot;+interface_yiKa_avg_daily_no);
Assert.assertEquals(interface_yiKa_avg_daily_no,&quot;0.37&quot;,&quot;易卡-件均-日-不含退单-指标取值错误：&quot;+interface_yiKa_avg_daily_no);
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="32、国美-件均-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-件均-日-不含退单 = 当日国美产品的订单金额/订单笔数 = 19242/6 = 3207 /10000=0.32
String interface_gome_avg_daily_no = ${gome_avg_daily_no};
log.info(&quot;国美-件均-日-不含退单:&quot;+interface_gome_avg_daily_no);
Assert.assertEquals(interface_gome_avg_daily_no,0.35,&quot;国美-件均-日-不含退单-接口取值错误:&quot;+interface_gome_avg_daily_no);	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="33、饼图标题-日-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_avg_daily_no = &quot;${indexName_avg_daily_no}&quot;;
log.info(&quot;饼图标题-日-不含退单:&quot;+interface_indexName_avg_daily_no);
Assert.assertEquals(interface_indexName_avg_daily_no,&quot;订单件均(万元)&quot;,&quot;饼图标题-日-不含退单-接口取值错误：&quot;+interface_indexName_avg_daily_no);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="34、订单件均-分息费-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${avg_dataList_list_daily_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件均-分息费-日-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;avg_dataList_list_daily_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeInterest ;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当日】-【订单件均】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="avg_dataList_list_daily_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 件均 = 总金额/总件数 分息费

HashMap expectedMap = new HashMap();
expectedMap.put(&quot;订单件均&quot;,&quot;0.36-0.4&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;0.36-0.42&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;0.4-0.32&quot;);

vars.putObject(&quot;avg_dataList_list_daily_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【订单金额】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">amount</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_amt_month_yes ( 总体-订单金额-月-含退单 )" enabled="true">
            <stringProp name="VAR">total_amt_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKaAmount_month_yes ( 易卡-订单金额-月-含退单 )" enabled="true">
            <stringProp name="VAR">yiKaAmount_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gomeAmount_month_yes ( 国美-订单金额-月-含退单 )" enabled="true">
            <stringProp name="VAR">gomeAmount_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_amt_month_yes ( 饼图标题-月-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_amt_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_typeDistributions_list_month_yes ( 订单金额-饼图占比分布-月-含退单 )" enabled="true">
            <stringProp name="VAR">amt_typeDistributions_list_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_dataList_list_month_yes ( 订单金额-息费及占比-月-含退单 )" enabled="true">
            <stringProp name="VAR">amt_dataList_list_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比7（js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="35、总体-订单金额-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	// 总体-订单金额-日-含退单 = 将当月每一天的记录进行累加，分产品的订单金额（total_contract_value）之和 
	var interfaceValue_total_amount = ${total_amt_month_yes};
	log.info(&quot;总体-订单金额-月-含退单:&quot;+interfaceValue_total_amount);
	var day = ${DayOfMonth};
	//log.info(&quot;当天所在的月份天数是:&quot;+day);
	if(day == 1){
		return interfaceValue_total_amount == &apos;42.25&apos;;
		}else{
		return interfaceValue_total_amount == &apos;84.51&apos;;
		}
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="36、易卡-订单金额-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_yiKa_amount = ${yiKaAmount_month_yes};
	log.info(&quot;易卡-订单金额-月-含退单:&quot;+interface_yiKa_amount);
	var actural_result = &apos;81.85&apos;;
	var day = ${DayOfMonth};
	if(day == 1){
		return interface_yiKa_amount == &apos;40.33&apos;;
		}else{
	     return interface_yiKa_amount == actural_result;
	}
}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="37、国美-订单金额-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_gome_amount = ${gomeAmount_month_yes};
	log.info(&quot;国美-订单金额-月-含退单:&quot;+interface_gome_amount);
	var actural_result = 2.66;
	var day = ${DayOfMonth};
	if(day == 1){
		return interface_gome_amount == 1.92;
		}else{
	     return interface_gome_amount == actural_result;
	}
}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="38、饼图标题-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_indexName_amt_month_yes = &quot;${indexName_amt_month_yes}&quot;;
	log.info(&quot;饼图标题-月-含退单:&quot;+interface_indexName_amt_month_yes);
	var actural_result = &quot;订单金额(万元)&quot;;
	return interface_indexName_amt_month_yes == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="39、订单金额-饼图占比分布-月-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_typeDistributions_list_month_yes};
	//接口返回的数组,2个元素,每一个元素是json对象,每一个元素包含2个键值对
     //{&quot;name&quot;:&quot;易卡 96.85%&quot;,&quot;value&quot;:&quot;818512&quot;},{&quot;name&quot;:&quot;国美在线 3.15%&quot;,&quot;value&quot;:&quot;70425.58&quot;}
	
	var interfaceArray = JSON.stringify(interfaceResult);  // 转换成字符串便于打印日志
     log.info(&quot;转换并解析json对象得到【订单金额-饼图占比分布-月-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_typeDistributions_list_month_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
		//log.info(&quot;key[&quot;+[i]+&quot;]:=&quot;+key);
          //log.info(&quot;数组角标为&quot;+[i]+&quot;的元素是：&quot;+JSON.stringify(interfaceResult[i])); 
          var interface_key_value = interfaceResult[i].value;
		//log.info(&quot;interfaceArray[&quot;+[i]+&quot;]:&quot;+interfaceResult[i].name+&quot;=&quot;+ interface_key_value);
		var actural_key_value = expectedResultMap[key];
		//log.info(&quot;expectedResultMap[&quot;+[i]+&quot;]:&quot;+key+&quot;=&quot; + actural_key_value);      
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_typeDistributions_list_month_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 移动端饼图有个规则，如果所传递的指标数值小于总值的 1/12=8.33% ，则接口传值设置为1/12，百分比是按实际值来计算，否则前端饼图显示不美观

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
     expectedMap.put(&quot;易卡 95.45%&quot;,&quot;403306&quot;);
     expectedMap.put(&quot;国美在线 4.55%&quot;,&quot;35212.33&quot;);
}else{
     expectedMap.put(&quot;国美在线 3.15%&quot;,&quot;70425.58&quot;);
     expectedMap.put(&quot;易卡 96.85%&quot;,&quot;818512&quot;);
}
vars.putObject(&quot;amt_typeDistributions_list_month_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="40、订单金额-息费及占比-月-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_dataList_list_month_yes};
//接口返回的数组,3个元素,每一个元素是json对象,每一个元素包含4个键值对:index 作为 key ,freeInterest-interest-freeRate 作为 value .
	
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-息费及占比-日-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot; + interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_dataList_list_month_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
		//log.info(&quot;key[&quot;+[i]+&quot;]:=&quot;+key);
          //log.info(&quot;数组角标为&quot;+[i]+&quot;的元素是：&quot;+JSON.stringify(interfaceResult[i])); 
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		//log.info(&quot;interfaceArray[&quot;+[i]+&quot;]:&quot;+interfaceResult[i].index+&quot;=&quot;+ interface_key_value);
		var actural_key_value = expectedResultMap[key];
		//log.info(&quot;expectedResultMap[&quot;+[i]+&quot;]:&quot;+key+&quot;=&quot; + actural_key_value);      
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单金额】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_dataList_list_month_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 产品作为 key ，免息-有息-免息占比 作为 value

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;订单金额&quot;,&quot;10.84-31.41-25.66%&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;9.72-30.61-24.09%&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;1.13-0.8-58.50%&quot;);
	}
else{
	expectedMap.put(&quot;订单金额&quot;,&quot;17.12-67.39-20.26%&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;15.41-66.44-18.83%&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;1.71-0.95-64.34%&quot;);
	}
	
vars.putObject(&quot;amt_dataList_list_month_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【订单金额】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">amount</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_amt_month_no ( 总体-订单金额-月-不含退单 )" enabled="true">
            <stringProp name="VAR">total_amt_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKaAmount_month_no ( 易卡-订单金额-月-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKaAmount_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gomeAmount_month_no ( 国美-订单金额-月-不含退单 )" enabled="true">
            <stringProp name="VAR">gomeAmount_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_amt_month_no ( 饼图标题-月-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_amt_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_typeDistributions_list_month_no ( 订单金额-饼图占比分布-月-不含退单 )" enabled="true">
            <stringProp name="VAR">amt_typeDistributions_list_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="amt_dataList_list_month_no ( 订单金额-息费及占比-月-不含退单 )" enabled="true">
            <stringProp name="VAR">amt_dataList_list_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比8（js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="41、总体-订单金额-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceValue_total_amount_month = ${total_amt_month_no};
	log.info(&quot;总体-订单金额-月-不含退单:&quot;+interfaceValue_total_amount_month);
	var day = ${DayOfMonth};
	if(day == 1){
		return interfaceValue_total_amount_month == &apos;36.26&apos;;
		}else{
	return interfaceValue_total_amount_month == &apos;73.61&apos;;
	}
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="42、易卡-订单金额-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_yiKa_amount_month = ${yiKaAmount_month_no};
	log.info(&quot;易卡-订单金额-月-不含退单:&quot;+interface_yiKa_amount_month);
	var actural_result = &quot;71.11&quot;;
	var day = ${DayOfMonth};
	if(day == 1){
	     return interface_yiKa_amount_month == &quot;34.49&quot;;
	}else{
		return interface_yiKa_amount_month == actural_result;
		}
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="43、国美-订单金额-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_gome_amount_month = ${gomeAmount_month_no};
	log.info(&quot;国美-订单金额-月-不含退单:&quot;+interface_gome_amount_month);
	var actural_result = 2.5;
	var day = ${DayOfMonth};
	if(day == 1){
		return interface_gome_amount_month == 1.76;
		}
	else{
	     return interface_gome_amount_month == actural_result;
	}
}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="44、饼图标题-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interface_indexName_amt_month_no = &quot;${indexName_amt_month_no}&quot;;
	log.info(&quot;饼图标题-月-不含退单:&quot;+interface_indexName_amt_month_no);
	var actural_result = &quot;订单金额(万元)&quot;;
	return interface_indexName_amt_month_no == actural_result;
	}
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="45、订单金额-饼图占比分布-月-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_typeDistributions_list_month_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-饼图占比分布-月-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_typeDistributions_list_month_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key]; 
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_typeDistributions_list_month_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

HashMap expectedMap = new HashMap();
int day = ${DayOfMonth};
if(day == 1){
	expectedMap.put(&quot;易卡 95.13%&quot;,&quot;344910&quot;);
     expectedMap.put(&quot;国美在线 4.87%&quot;,&quot;30212.75&quot;);
	}else{
		expectedMap.put(&quot;易卡 96.60%&quot;,&quot;711065&quot;);
          expectedMap.put(&quot;国美在线 3.40%&quot;,&quot;61338.42&quot;);
		}

vars.putObject(&quot;amt_typeDistributions_list_month_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="46、订单金额-息费及占比-月-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${amt_dataList_list_month_no};
	//接口返回的数组,2个元素，每一个元素是json对象,每一个元素包含4个键值对，index作为key freeInterest-interest-freeRate作为value
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单金额-息费及占比-月-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;amt_dataList_list_month_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];  
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单金额】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="amt_dataList_list_month_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 产品作为 key ，免息-有息-免息占比 作为 value

HashMap expectedMap = new HashMap();
//key:免息-有息-免息占比
int day = ${DayOfMonth};
if(day == 1){
	expectedMap.put(&quot;订单金额&quot;,&quot;6.05-30.2-16.70%&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;5.09-29.4-14.75%&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;0.97-0.8-54.74%&quot;);
	}else{
          expectedMap.put(&quot;订单金额&quot;,&quot;10.87-62.74-14.77%&quot;);
          expectedMap.put(&quot;易卡&quot;,&quot;9.32-61.79-13.10%&quot;);
          expectedMap.put(&quot;国美在线&quot;,&quot;1.55-0.95-62.05%&quot;);
	}
vars.putObject(&quot;amt_dataList_list_month_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【订单件数】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">count</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_count_month_yes ( 总体-订单件数-月-含退单 )" enabled="true">
            <stringProp name="VAR">total_count_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_count_month_yes ( 易卡-订单件数-月-含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_count_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_count_month_yes ( 国美-订单件数-月-含退单 )" enabled="true">
            <stringProp name="VAR">gome_count_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_count_month_yes ( 饼图标题-月-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_count_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_typeDistributions_list_month_yes ( 订单件数-饼图占比分布-月-含退单 )" enabled="true">
            <stringProp name="VAR">count_typeDistributions_list_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_dataList_list_month_yes ( 订单件数-息费及占比-月-含退单 )" enabled="true">
            <stringProp name="VAR">count_dataList_list_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比9（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="47、总体-订单件数-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
String interfaceValue_total_count_month_yes = ${total_count_month_yes};
log.info(&quot;总体-订单件数-月-含退单:&quot;+interfaceValue_total_count_month_yes);
int day = ${DayOfMonth};
if(day == 1){
	Assert.assertEquals(interfaceValue_total_count_month_yes,109,&quot;总体-订单件数-月-含退单-接口取值错误：&quot;+interfaceValue_total_count_month_yes);
	}
	else{
     Assert.assertEquals(interfaceValue_total_count_month_yes,218,&quot;总体-订单件数-月-含退单-接口取值错误：&quot;+interfaceValue_total_count_month_yes);
	}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="48、易卡-订单件数-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String  interface_yiKa_count_month_yes = &quot;${yiKa_count_month_yes}&quot;;
log.info(&quot;易卡-订单件数-月-含退单:&quot;+interface_yiKa_count_month_yes);
int day = ${DayOfMonth};
if(day == 1){
    Assert.assertEquals(interface_yiKa_count_month_yes,&quot;103&quot;,&quot;易卡-订单件数-月-含退单-指标取值错误：&quot;+interface_yiKa_count_month_yes);
}
else{
    Assert.assertEquals(interface_yiKa_count_month_yes,&quot;206&quot;,&quot;易卡-订单件数-月-含退单-指标取值错误：&quot;+interface_yiKa_count_month_yes);
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="49、国美-订单件数-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
String interface_gome_count_month_yes = ${gome_count_month_yes};
log.info(&quot;国美-订单件数-月-含退单:&quot;+interface_gome_count_month_yes);
int day = ${DayOfMonth};
if(day == 1){
	Assert.assertEquals(interface_gome_count_month_yes,6,&quot;国美-订单件数-月-含退单-接口取值错误:&quot;+interface_gome_count_month_yes);	
	}else{
          Assert.assertEquals(interface_gome_count_month_yes,12,&quot;国美-订单件数-月-含退单-接口取值错误:&quot;+interface_gome_count_month_yes);	
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="50、饼图标题-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_count_month_yes = &quot;${indexName_count_month_yes}&quot;;
log.info(&quot;饼图标题-月-含退单:&quot;+interface_indexName_count_month_yes);
Assert.assertEquals(interface_indexName_count_month_yes,&quot;订单件数&quot;,&quot;饼图标题-月-含退单-接口取值错误：&quot;+interface_indexName_count_month_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="51、订单件数-饼图占比分布-月-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_typeDistributions_list_month_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-饼图占比分布-月-含退单】&quot;+interfaceArray);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_typeDistributions_list_month_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_typeDistributions_list_month_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;易卡 94.50%&quot;,&quot;103&quot;);
     expectedMap.put(&quot;国美在线 5.50%&quot;,&quot;9.08&quot;);
	}else{
expectedMap.put(&quot;易卡 94.50%&quot;,&quot;206&quot;);
expectedMap.put(&quot;国美在线 5.50%&quot;,&quot;18.17&quot;);
}

vars.putObject(&quot;count_typeDistributions_list_month_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="52、订单件数-息费及占比-月-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_dataList_list_month_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-息费及占比-月-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_dataList_list_month_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单件数】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_dataList_list_month_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 产品作为 key ，免息-有息-免息占比 作为 value

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;订单件数&quot;,&quot;22-87-20.18%&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;18-85-17.48%&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;4-2-66.67%&quot;);
	}
else{
expectedMap.put(&quot;订单件数&quot;,&quot;42-176-19.27%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;33-173-16.02%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;9-3-75.00%&quot;);
}

vars.putObject(&quot;count_dataList_list_month_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【订单件数】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">count</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_count_month_no ( 总体-订单件数-月-不含退单 )" enabled="true">
            <stringProp name="VAR">total_count_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_count_month_no ( 易卡-订单件数-月-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_count_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_count_month_no ( 国美-订单件数-月-不含退单 )" enabled="true">
            <stringProp name="VAR">gome_count_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_count_month_no ( 饼图标题-月-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_count_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_typeDistributions_list_month_no ( 订单件数-饼图占比分布-月-不含退单 )" enabled="true">
            <stringProp name="VAR">count_typeDistributions_list_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.typeDistributions</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="count_dataList_list_month_no ( 订单件数-息费及占比-月-不含退单 )" enabled="true">
            <stringProp name="VAR">count_dataList_list_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比10（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="53、总体-订单件数-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
// 总体-订单笔数-日-含退单 = 当日分产品的订单笔数（rel_loan_num）之和  = 3+81+2+12 = 98

int day = ${DayOfMonth};
String interfaceValue_total_count_month_no = ${total_count_month_no};
log.info(&quot;总体-订单件数-月-不含退单:&quot;+interfaceValue_total_count_month_no);
if(day == 1){
	Assert.assertEquals(interfaceValue_total_count_month_no,98,&quot;总体-订单件数-月-不含退单-接口取值错误：&quot;+interfaceValue_total_count_month_no);
	}else{
          Assert.assertEquals(interfaceValue_total_count_month_no,195,&quot;总体-订单件数-月-不含退单-接口取值错误：&quot;+interfaceValue_total_count_month_no);
     }</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="54、易卡-订单件数-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-订单金额-日-含退单 = 当日易卡产品的订单金额（rel_loan_num）之和 = 81+12 = 93
int day = ${DayOfMonth};
String  interface_yiKa_count_month_no = &quot;${yiKa_count_month_no}&quot;;  //注意要加引号同时加不加全部去掉
log.info(&quot;易卡-订单件数-月-不含退单:&quot;+interface_yiKa_count_month_no);
if(day == 1){
	Assert.assertEquals(interface_yiKa_count_month_no,&quot;93&quot;,&quot;易卡-订单件数-月-不含退单-指标取值错误：&quot;+interface_yiKa_count_month_no);
	}
else{
Assert.assertEquals(interface_yiKa_count_month_no,&quot;184&quot;,&quot;易卡-订单件数-月-不含退单-指标取值错误：&quot;+interface_yiKa_count_month_no);
}
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="55、国美-订单件数-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-订单金额-日-含退单 = 当日国美产品的订单金额（rel_loan_num）之和 = 3+2 =5
int day = ${DayOfMonth};
String interface_gome_count_month_no = ${gome_count_month_no};
log.info(&quot;国美-订单件数-月-不含退单:&quot;+interface_gome_count_month_no);
if(day == 1){
	Assert.assertEquals(interface_gome_count_month_no,5,&quot;国美-订单件数-月-不含退单-接口取值错误:&quot;+interface_gome_count_month_no);
	}else{
Assert.assertEquals(interface_gome_count_month_no,11,&quot;国美-订单件数-月-不含退单-接口取值错误:&quot;+interface_gome_count_month_no);
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="56、饼图标题-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_count_month_no = &quot;${indexName_count_month_no}&quot;;
log.info(&quot;饼图标题-月-不含退单:&quot;+interface_indexName_count_month_no);
Assert.assertEquals(interface_indexName_count_month_no,&quot;订单件数&quot;,&quot;饼图标题-月-不含退单-接口取值错误：&quot;+interface_indexName_count_month_no);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="57、订单件数-饼图占比分布-月-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_typeDistributions_list_month_no};
	var interfaceArray = JSON.stringify(interfaceResult);  
     log.info(&quot;转换并解析json对象得到【订单件数-饼图占比分布-月-不含退单】&quot;);
      log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_typeDistributions_list_month_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].name;
          var interface_key_value = interfaceResult[i].value;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_typeDistributions_list_month_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;易卡 94.90%&quot;,&quot;93&quot;);
     expectedMap.put(&quot;国美在线 5.10%&quot;,&quot;8.17&quot;);
	}
else{
expectedMap.put(&quot;易卡 94.36%&quot;,&quot;184&quot;);
expectedMap.put(&quot;国美在线 5.64%&quot;,&quot;16.25&quot;);
}
vars.putObject(&quot;count_typeDistributions_list_month_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="58、订单件数-息费及占比-日-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${count_dataList_list_month_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件数-息费及占比-月-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;count_dataList_list_month_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest +&quot;-&quot;+ interfaceResult[i].freeRate;
		var actural_key_value = expectedResultMap[key];   
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单件数】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="count_dataList_list_month_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 产品作为 key ，免息-有息-免息占比 作为 value

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;订单件数&quot;,&quot;15-83-15.31%&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;12-81-12.90%&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;3-2-60.00%&quot;);}
else{
expectedMap.put(&quot;订单件数&quot;,&quot;32-163-16.41%&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;24-160-13.04%&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;8-3-72.73%&quot;);
}

vars.putObject(&quot;count_dataList_list_month_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【件均】-【含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">avg</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_avg_month_yes ( 总体-件均-月-含退单 )" enabled="true">
            <stringProp name="VAR">total_avg_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_avg_month_yes ( 易卡-件均-月-含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_avg_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_avg_month_yes ( 国美-件均-月-含退单 )" enabled="true">
            <stringProp name="VAR">gome_avg_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_avg_month_yes ( 饼图标题-月-含退单 )" enabled="true">
            <stringProp name="VAR">indexName_avg_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="avg_dataList_list_month_yes ( 件均-息费-月-不含退单 )" enabled="true">
            <stringProp name="VAR">avg_dataList_list_month_yes</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比11（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="59、总体-件均-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 
	
// 总体-件均-日-含退单 = 当日分产品的订单金额/订单笔数 = 422548/109=3976.5871 /10000=0.39
String interfaceValue_total_avg_month_yes = ${total_avg_month_yes};
log.info(&quot;总体-件均-月-含退单:&quot;+interfaceValue_total_avg_month_yes);
// 当日和当月的件均都是 0.39 因此不需要进行判断
Assert.assertEquals(interfaceValue_total_avg_month_yes,0.39,&quot;总体-件均-月-含退单-接口取值错误：&quot;+interfaceValue_total_avg_month_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="60、易卡-件均-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-件均-日-含退单 = 当日易卡产品的订单金额/订单笔数 = 403306/103 = 3915.5922 /10000=0.39
String  interface_yiKa_avg_month_yes = &quot;${yiKa_avg_month_yes}&quot;;
log.info(&quot;易卡-件均-月-含退单:&quot;+interface_yiKa_avg_month_yes);
int day = ${DayOfMonth};
if(day == 1){
	Assert.assertEquals(interface_yiKa_avg_month_yes,&quot;0.39&quot;,&quot;易卡-件均-月-含退单-指标取值错误：&quot;+interface_yiKa_avg_month_yes);
	}else{
Assert.assertEquals(interface_yiKa_avg_month_yes,&quot;0.4&quot;,&quot;易卡-件均-月-含退单-指标取值错误：&quot;+interface_yiKa_avg_month_yes);
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="61、国美-件均-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-件均-日-含退单 = 当日国美产品的订单金额/订单笔数 = 19242/6 = 3207 /10000=0.32
String interface_gome_avg_month_yes = ${gome_avg_month_yes};
log.info(&quot;国美-件均-月-含退单:&quot;+interface_gome_avg_month_yes);
int day = ${DayOfMonth};
if(day == 1){
	Assert.assertEquals(interface_gome_avg_month_yes,0.32,&quot;国美-件均-月-含退单-接口取值错误:&quot;+interface_gome_avg_month_yes);
	}else{
Assert.assertEquals(interface_gome_avg_month_yes,0.22,&quot;国美-件均-月-含退单-接口取值错误:&quot;+interface_gome_avg_month_yes);	}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="62、饼图标题-月-含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_avg_month_yes = &quot;${indexName_avg_month_yes}&quot;;
log.info(&quot;饼图标题-月-含退单:&quot;+interface_indexName_avg_month_yes);
Assert.assertEquals(interface_indexName_avg_month_yes,&quot;订单件均(万元)&quot;,&quot;饼图标题-月-含退单-接口取值错误：&quot;+interface_indexName_avg_month_yes);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="63、订单件均-分息费-月-含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${avg_dataList_list_month_yes};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件均-分息费-月-含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;avg_dataList_list_month_yes_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest ;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单件均】-【含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="avg_dataList_list_month_yes_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 件均 = 总金额/总件数 分息费

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;订单件均&quot;,&quot;0.49-0.36&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;0.54-0.36&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;0.28-0.4&quot;);
	}else{
expectedMap.put(&quot;订单件均&quot;,&quot;0.41-0.38&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;0.47-0.38&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;0.19-0.32&quot;);
}
vars.putObject(&quot;avg_dataList_list_month_yes_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条综述接口】-【当月】-【件均】-【不含退单】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__P(edate,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
              <elementProp name="dateType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">month</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateType</stringProp>
              </elementProp>
              <elementProp name="indexType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">avg</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">indexType</stringProp>
              </elementProp>
              <elementProp name="chargeback" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">chargeback</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special/overview.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="total_avg_month_no ( 总体-件均-月-不含退单 )" enabled="true">
            <stringProp name="VAR">total_avg_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.total</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="yiKa_avg_month_no ( 易卡-件均-月-不含退单 )" enabled="true">
            <stringProp name="VAR">yiKa_avg_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.yiKaAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_avg_month_no ( 国美-件均-月-不含退单 )" enabled="true">
            <stringProp name="VAR">gome_avg_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gomeAmount</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="indexName_avg_month_no ( 饼图标题-月-不含退单 )" enabled="true">
            <stringProp name="VAR">indexName_avg_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.indexName</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="avg_dataList_list_month_no ( 件均-息费-月-不含退单 )" enabled="true">
            <stringProp name="VAR">avg_dataList_list_month_no</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.dataList</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果对比12（java+js）" enabled="false">
          <stringProp name="TestPlan.comments">由于实现了数据库落库造数故预期结果不再进行查库操作，手动计算写死即可</stringProp>
        </GenericController>
        <hashTree>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="64、总体-件均-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert; 	

// 总体-件均-日-不含退单 = 当日分产品的订单金额/订单笔数
int day = ${DayOfMonth};
String interfaceValue_total_avg_month_no = ${total_avg_month_no};
log.info(&quot;总体-件均-月-不含退单:&quot;+interfaceValue_total_avg_month_no);
if(day == 1){
	Assert.assertEquals(interfaceValue_total_avg_month_no,0.37,&quot;总体-件均-月-不含退单-接口取值错误：&quot;+interfaceValue_total_avg_month_no);
	}
else{
Assert.assertEquals(interfaceValue_total_avg_month_no,0.38,&quot;总体-件均-月-不含退单-接口取值错误：&quot;+interfaceValue_total_avg_month_no);
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="65、易卡-件均-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

// 易卡-件均-日-不含退单 = 当日易卡产品的订单金额/订单笔数 = 403306/103 = 3915.5922 /10000=0.39
int day = ${DayOfMonth};
String  interface_yiKa_avg_month_no = &quot;${yiKa_avg_month_no}&quot;;
log.info(&quot;易卡-件均-月-不含退单:&quot;+interface_yiKa_avg_month_no);
if(day == 1){
	Assert.assertEquals(interface_yiKa_avg_month_no,&quot;0.37&quot;,&quot;易卡-件均-月-不含退单-指标取值错误：&quot;+interface_yiKa_avg_month_no);
	}else{
Assert.assertEquals(interface_yiKa_avg_month_no,&quot;0.39&quot;,&quot;易卡-件均-月-不含退单-指标取值错误：&quot;+interface_yiKa_avg_month_no);
}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="66、国美-件均-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;
	
// 国美-件均-日-不含退单 = 当日国美产品的订单金额/订单笔数 = 19242/6 = 3207 /10000=0.32
int day = ${DayOfMonth};
String interface_gome_avg_month_no = ${gome_avg_month_no};
log.info(&quot;国美-件均-月-不含退单:&quot;+interface_gome_avg_month_no);
if(day == 1){
	Assert.assertEquals(interface_gome_avg_month_no,0.35,&quot;国美-件均-月-不含退单-接口取值错误:&quot;+interface_gome_avg_month_no);
	}else{
Assert.assertEquals(interface_gome_avg_month_no,0.23,&quot;国美-件均-月-不含退单-接口取值错误:&quot;+interface_gome_avg_month_no);	}</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="67、饼图标题-月-不含退单" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_indexName_avg_month_no = &quot;${indexName_avg_month_no}&quot;;
log.info(&quot;饼图标题-月-不含退单:&quot;+interface_indexName_avg_month_no);
Assert.assertEquals(interface_indexName_avg_month_no,&quot;订单件均(万元)&quot;,&quot;饼图标题-月-不含退单-接口取值错误：&quot;+interface_indexName_avg_month_no);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="68、订单件均-分息费-月-不含退单（key、value）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compareValue(){
	var interfaceResult = ${avg_dataList_list_month_no};
	var interfaceArray = JSON.stringify(interfaceResult);
     log.info(&quot;转换并解析json对象得到【订单件均-分息费-月-不含退单】&quot;);
     log.info(&quot;interfaceArray = &quot;+interfaceArray);
	var expectedResultMap = vars.getObject(&quot;avg_dataList_list_month_no_expected&quot;);
     log.info(&quot;expectedResultMap = &quot; + expectedResultMap);
     
     if(interfaceResult == null || interfaceResult == &quot;null&quot;){
     	//存在接口层返回的值为空的情况，我们在json path Extractor中将这种情况的返回值定义为null
     	//此时如果本地服务未启动，这些断言直接返回 false，因为 json path 解析默认值就是 null
		return false;
	}
	
     var flag = true;
	for(var i=0;i&lt;interfaceResult.length;i++){
		var key = interfaceResult[i].index;
          var interface_key_value = interfaceResult[i].freeInterest +&quot;-&quot;+ interfaceResult[i].interest ;
		var actural_key_value = expectedResultMap[key];
		flag = flag &amp;&amp; (interface_key_value==actural_key_value);
		log.info(&quot;flag**********************&quot;+flag);	
	}
	log.info(&quot;【白条综述接口】-【当月】-【订单件均】-【不含退单】相关指标对比完毕！&quot;+&quot;\n&quot;);
	return flag;
	}	
compareValue();</stringProp>
          </JSR223Sampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="avg_dataList_list_month_no_expected" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.HashMap;

// 件均 = 总金额/总件数 分息费

int day = ${DayOfMonth};
HashMap expectedMap = new HashMap();
if(day == 1){
	expectedMap.put(&quot;订单件均&quot;,&quot;0.4-0.36&quot;);
     expectedMap.put(&quot;易卡&quot;,&quot;0.42-0.36&quot;);
     expectedMap.put(&quot;国美在线&quot;,&quot;0.32-0.4&quot;);
	}else{
expectedMap.put(&quot;订单件均&quot;,&quot;0.34-0.38&quot;);
expectedMap.put(&quot;易卡&quot;,&quot;0.39-0.39&quot;);
expectedMap.put(&quot;国美在线&quot;,&quot;0.19-0.32&quot;);
}
vars.putObject(&quot;avg_dataList_list_month_no_expected&quot;,expectedMap);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【白条专题接口】-【国美在线图表 + 授信额度区间分布图 + 申请提现用户分析图】" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="edate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__property(edate)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">edate</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${hostip}</stringProp>
          <stringProp name="HTTPSampler.port">${hostPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/app/meiJie/baitiao/special.gm</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="存储接口响应的内容为String" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String response = prev.getResponseDataAsString(); //在后置处理器 Beanshell中，获取前置请求返回值。注意此处只能获取到String类型;
log.info(&quot;【白条专题接口】响应的内容为：&quot;+ response +&quot;\n&quot;);
vars.put(&quot;interface_response&quot;,response);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="rq ( 离线数据T+1 日期 )" enabled="true">
            <stringProp name="VAR">rq</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.rq</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_reg_scale_date_list （国美在线图表-注册规模-时间列）" enabled="false">
            <stringProp name="VAR">gome_chart_reg_scale_date_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.reg_scale.date_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="TestPlan.comments">直接通过 JSON Path 解析返回的 json 数据</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_reg_scale_reg_user_list （国美在线图表-注册规模-注册用户数列）" enabled="true">
            <stringProp name="VAR">gome_chart_reg_scale_reg_user_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.reg_scale.reg_user_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_pass_percent_date_list （国美在线图表-审批通过率-时间列）" enabled="true">
            <stringProp name="VAR">gome_chart_pass_percent_date_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.pass_percent.date_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_pass_percent_apply_num_list（国美在线图表-审批通过率-白条申请次数列）" enabled="false">
            <stringProp name="VAR">gome_chart_pass_percent_apply_num_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.pass_percent.apply_num_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_pass_percent_pass_num_list（国美在线图表-审批通过率-审批通过次数列）" enabled="false">
            <stringProp name="VAR">gome_chart_pass_percent_pass_num_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.pass_percent.pass_num_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_pass_percent_pass_percent_list（国美在线图表-审批通过率-审批通过率列）" enabled="false">
            <stringProp name="VAR">gome_chart_pass_percent_pass_percent_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.pass_percent.pass_percent_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_credit_scale_date_list（国美在线图表-授信规模-时间列）" enabled="true">
            <stringProp name="VAR">gome_chart_credit_scale_date_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.credit_scale.date_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_credit_scale_total_credit_list（国美在线图表-授信规模-授信总额度列）" enabled="true">
            <stringProp name="VAR">gome_chart_credit_scale_total_credit_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.credit_scale.total_credit_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="gome_chart_credit_scale_tixian_user_list（国美在线图表-授信规模-申请提现用户数列）" enabled="true">
            <stringProp name="VAR">gome_chart_credit_scale_tixian_user_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.gome_chart.credit_scale.tixian_user_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_date_list（授信额度区间分布图-时间列）" enabled="true">
            <stringProp name="VAR">credit_distri_date_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.date_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_section1_list（授信额度区间分布图-区间1）" enabled="true">
            <stringProp name="VAR">credit_distri_section1_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.section1</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_section2_list（授信额度区间分布图-区间2）" enabled="false">
            <stringProp name="VAR">credit_distri_section2_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.section2</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_section3_list（授信额度区间分布图-区间3）" enabled="false">
            <stringProp name="VAR">credit_distri_section3_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.section3</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_section4_list（授信额度区间分布图-区间4）" enabled="true">
            <stringProp name="VAR">credit_distri_section4_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.section4</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="credit_distri_section5_list（授信额度区间分布图-区间5）" enabled="true">
            <stringProp name="VAR">credit_distri_section5_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.credit_distri.section5</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_date_list（申请提现用户分析图-时间列）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_date_list</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.date_list</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum1List（申请提现用户分析图-用户数-当天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum1List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum1List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum2List（申请提现用户分析图-用户数-2-7天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum2List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum2List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum3List（申请提现用户分析图-用户数-8-14天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum3List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum3List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum4List（申请提现用户分析图-用户数-15-30天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum4List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum4List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum5List（申请提现用户分析图-用户数-31-60天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum5List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum5List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userNum6List（申请提现用户分析图-用户数-尚未提现）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userNum6List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userNum6List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate1List（申请提现用户分析图-用户数占比-当天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate1List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate1List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate2List（申请提现用户分析图-用户数占比-2-7天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate2List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate2List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate3List（申请提现用户分析图-用户数占比-8-14天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate3List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate3List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate4List（申请提现用户分析图-用户数占比-15-30天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate4List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate4List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate5List（申请提现用户分析图-用户数占比-31-60天）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate5List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate5List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="tixian_user_chart_userRate6List（申请提现用户分析图-用户数占比-尚未提现）" enabled="true">
            <stringProp name="VAR">tixian_user_chart_userRate6List</stringProp>
            <stringProp name="JSONPATH">$.data.datainfo.tixian_user_chart.userRate6List</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="预期结果比对13（java+js）" enabled="false"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="69、查询日期T+1" enabled="true">
            <stringProp name="scriptLanguage">java</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.testng.Assert;

String interface_rq = &quot;${rq}&quot;;
String actural_value = &quot;${Yesterday}&quot;;
log.info(&quot;查询日期T+1字符串为：&quot;+interface_rq);
Assert.assertEquals(interface_rq,actural_value,&quot;查询日期T+1字符串-接口取值错误：&quot;+interface_rq);

</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="70、国美在线图表-注册规模-时间列右边界值（java）" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

//public void compare(){
  try{
   	String interface_response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(interface_response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;gome_chart&quot;).getJSONObject(&quot;reg_scale&quot;);
     JSONArray jsonArray_date_list = response_json_target.getJSONArray(&quot;date_list&quot;);
     log.info(&quot;jsonArray_date_list = &quot;+jsonArray_date_list);
     int len = jsonArray_date_list.length();
     log.info(&quot;时间list的长度为：&quot;+ len );
     String interface_gome_chart_reg_scale_date = jsonArray_date_list.getString(len-1);
     log.info(&quot;国美在线图表-注册规模-时间列右边界值为：&quot;+interface_gome_chart_reg_scale_date);
     String actural_value = &quot;${Yesterday}&quot;;
     Assert.assertEquals(interface_gome_chart_reg_scale_date,actural_value,&quot;国美在线图表-注册规模-时间列右边界值-接口取值错误：&quot;+interface_gome_chart_reg_scale_date);
    }catch(JSONException e){
    e.printStackTrace();
    }
//}
//compare();</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="71、国美在线图表-注册规模-注册用户数（js）" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_reg_user_list = ${gome_chart_reg_scale_reg_user_list};
	log.info(&quot;interface_reg_user_list = &quot;+interface_reg_user_list);
	var i = interface_reg_user_list.length - 1;
	var result = interface_reg_user_list[i];
	log.info(&quot;国美在线图表-注册规模-注册用户数 = &quot;+result);
	return result == 781;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="72、国美在线图表-审批通过率-时间列右边界值" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_pass_percent_date_list = ${gome_chart_pass_percent_date_list};
	log.info(&quot;interface_pass_percent_date_list = &quot;+interface_pass_percent_date_list);
	var i = interface_pass_percent_date_list.length - 1;
	var result = interface_pass_percent_date_list[i];
	log.info(&quot;国美在线图表-审批通过率-时间列右边界值 = &quot;+result);
	var actural_value = &quot;${Yesterday}&quot;;
	return result == actural_value ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="73、国美在线图表-审批通过率-白条申请次数" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

  try{
   	String response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;gome_chart&quot;).getJSONObject(&quot;pass_percent&quot;);
     JSONArray jsonArray_apply_num_list = response_json_target.getJSONArray(&quot;apply_num_list&quot;);
     log.info(&quot;jsonArray_apply_num_list = &quot;+jsonArray_apply_num_list);
     int len = jsonArray_apply_num_list.length();
     // 注意变量值的实际类型，如：int、bigdecimal( 数字带小数点= Double )、string，对应取值的方法也不同 getString、get
     int interface_gome_chart_pass_percent_apply_num = jsonArray_apply_num_list.get(len-1);
     log.info(&quot;国美在线图表-审批通过率-白条申请次数为：&quot;+interface_gome_chart_pass_percent_apply_num);
     Assert.assertEquals(interface_gome_chart_pass_percent_apply_num,16,&quot;国美在线图表-审批通过率-白条申请次数-接口取值错误：&quot;+interface_gome_chart_pass_percent_apply_num);
    }catch(JSONException e){
    e.printStackTrace();
    }</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="74、国美在线图表-审批通过率-审批通过次数" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

public void compare(){
  try{
   	String interface_response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(interface_response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;gome_chart&quot;).getJSONObject(&quot;pass_percent&quot;);
     JSONArray jsonArray_pass_num_list = response_json_target.getJSONArray(&quot;pass_num_list&quot;);
     log.info(&quot;jsonArray_pass_num_list = &quot;+jsonArray_pass_num_list);
     int len = jsonArray_pass_num_list.length();
     // 注意变量值的实际类型，如：int、bigdecimal(数字带小数点 = Double)、string，对应取值的方法也不同 getString、get
     int interface_gome_chart_pass_percent_pass_num = jsonArray_pass_num_list.get(len-1);
     log.info(&quot;国美在线图表-审批通过率-审批通过次数为：&quot;+interface_gome_chart_pass_percent_pass_num);
     Assert.assertEquals(interface_gome_chart_pass_percent_pass_num,11,&quot;国美在线图表-审批通过率-审批通过次数-接口取值错误：&quot;+interface_gome_chart_pass_percent_pass_num);
    }catch(JSONException e){
    e.printStackTrace();
    }
}
compare();</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="75、国美在线图表-审批通过率-审批通过率（java）" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

  try{
   	String interface_response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(interface_response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;gome_chart&quot;).getJSONObject(&quot;pass_percent&quot;);
     JSONArray jsonArray_pass_percent_list = response_json_target.getJSONArray(&quot;pass_percent_list&quot;);
     log.info(&quot;jsonArray_pass_percent_list = &quot;+jsonArray_pass_percent_list);
     int len = jsonArray_pass_percent_list.length();
     Double interface_gome_chart_reg_scale_pass_percent = jsonArray_pass_percent_list.get(len-1);
     log.info(&quot;国美在线图表-审批通过率-审批通过率为：&quot;+interface_gome_chart_reg_scale_pass_percent);
     String actural_value = &quot;${Yesterday}&quot;;
     Assert.assertEquals(interface_gome_chart_reg_scale_pass_percent,68.75,&quot;国美在线图表-审批通过率-审批通过率-接口取值错误：&quot;+interface_gome_chart_reg_scale_pass_percent);
    }catch(JSONException e){
    e.printStackTrace();
    }</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="76、国美在线图表-授信规模-时间列右边界值" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_scale_date_list = ${gome_chart_credit_scale_date_list};
	log.info(&quot;interface_credit_scale_date_list = &quot;+interface_credit_scale_date_list);
	var i = interface_credit_scale_date_list.length - 1;
	var result = interface_credit_scale_date_list[i];
	log.info(&quot;国美在线图表-授信规模-时间列右边界值 = &quot;+result);
	var actural_value = &quot;${Yesterday}&quot;;
	return result == actural_value ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="77、国美在线图表-授信规模-授信总额度" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_scale_total_credit_list = ${gome_chart_credit_scale_total_credit_list};
	log.info(&quot;interface_credit_scale_total_credit_list = &quot;+interface_credit_scale_total_credit_list);
	var i = interface_credit_scale_total_credit_list.length - 1;
	var result = interface_credit_scale_total_credit_list[i];
	log.info(&quot;国美在线图表-授信规模-授信总额度 = &quot;+result);
	return result == 22.11 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="78、国美在线图表-授信规模-申请提现用户数" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_scale_tixian_user_list = ${gome_chart_credit_scale_tixian_user_list};
	log.info(&quot;interface_credit_scale_tixian_user_list = &quot;+interface_credit_scale_tixian_user_list);
	var i = interface_credit_scale_tixian_user_list.length - 1;
	var result = interface_credit_scale_tixian_user_list[i];
	log.info(&quot;国美在线图表-授信规模-申请提现用户数 = &quot;+result);
	return result == 24;
	}
	compare();
	
	log.info(&quot;~~~~~~~~~~~~~【国美在线图表】相关指标对比完毕！~~~~~~~~~~~~&quot;+ &quot;\n&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="79、授信额度区间分布图-时间列右边界值" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_distri_date_list = ${credit_distri_date_list};
	log.info(&quot;interface_credit_distri_date_list = &quot;+interface_credit_distri_date_list);
	var i = interface_credit_distri_date_list.length - 1;
	var result = interface_credit_distri_date_list[i];
	log.info(&quot;授信额度区间分布图-时间列右边界值 = &quot;+result);
	var actural_value = &quot;${Yesterday}&quot;;
	return result == actural_value ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="80、授信额度区间分布图-区间1" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_distri_section1_list = ${credit_distri_section1_list};
	log.info(&quot;interface_credit_distri_section1_list = &quot;+interface_credit_distri_section1_list);
	var i = interface_credit_distri_section1_list.length - 1;
	var result = interface_credit_distri_section1_list[i];
	log.info(&quot;授信额度区间分布图-区间1 = &quot;+result);
	return result == 2.3 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="81、授信额度区间分布图-区间2" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

public void compare(){
  try{
   	String interface_response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(interface_response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;credit_distri&quot;);
     JSONArray jsonArray_section2 = response_json_target.getJSONArray(&quot;section2&quot;);
     log.info(&quot;jsonArray_section2 = &quot;+jsonArray_section2);
     int len = jsonArray_section2.length();
     // 注意变量值的实际类型，如：int、bigdecimal(数字带小数点 = Double)、string，对应取值的方法也不同 getString、get
     double interface_section2 = jsonArray_section2.get(len-1);
     log.info(&quot;国美在线图表-审批通过率-审批通过次数为：&quot;+interface_section2);
     Assert.assertEquals(interface_section2,4.32,&quot;国美在线图表-审批通过率-审批通过次数-接口取值错误：&quot;+interface_section2);
    }catch(JSONException e){
    e.printStackTrace();
    }
}
compare();</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="82、授信额度区间分布图-区间3（java）" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;
import org.testng.Assert;

  try{
   	String interface_response = vars.get(&quot;interface_response&quot;);
     JSONObject response_json = new JSONObject(interface_response);
     JSONObject response_json_target = response_json.getJSONObject(&quot;data&quot;).getJSONObject(&quot;datainfo&quot;).getJSONObject(&quot;credit_distri&quot;);
     JSONArray jsonArray_section3 = response_json_target.getJSONArray(&quot;section3&quot;);
     log.info(&quot;jsonArray_section3 = &quot;+jsonArray_section3);
     int len = jsonArray_section3.length();
     // 注意变量值的实际类型，如：int、bigdecimal(数字带小数点 = Double)、string，对应取值的方法也不同 getString、get
     double interface_section3 = jsonArray_section3.get(len-1);
     log.info(&quot;国美在线图表-审批通过率-审批通过次数为：&quot;+interface_section3);
     Assert.assertEquals(interface_section3,6.3,&quot;国美在线图表-审批通过率-审批通过次数-接口取值错误：&quot;+interface_section3);
    }catch(JSONException e){
    e.printStackTrace();
    }</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="83、授信额度区间分布图-区间4" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_distri_section4_list = ${credit_distri_section4_list};
	log.info(&quot;interface_credit_distri_section4_list = &quot;+interface_credit_distri_section4_list);
	var i = interface_credit_distri_section4_list.length - 1;
	var result = interface_credit_distri_section4_list[i];
	log.info(&quot;授信额度区间分布图-区间4 = &quot;+result);
	return result == 2.03 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="84、授信额度区间分布图-区间5" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_credit_distri_section5_list = ${credit_distri_section5_list};
	log.info(&quot;interface_credit_distri_section5_list = &quot;+interface_credit_distri_section5_list);
	var i = interface_credit_distri_section5_list.length - 1;
	var result = interface_credit_distri_section5_list[i];
	log.info(&quot;授信额度区间分布图-区间5 = &quot;+result);
	return result == 5.62 ;
	}
compare();
log.info(&quot;~~~~~~~~~~~~~【授信额度区间分布图】相关指标对比完毕！~~~~~~~~~~~~&quot;+ &quot;\n&quot;);
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="85、申请提现用户分析图-时间列右边界值" enabled="true">
            <stringProp name="TestPlan.comments">申请提现用户分析图-时间列：默认为T+1的前30天,日期中 day-31 不需要考虑月份，最左侧是（T+1的前30天 = 今天-31天），最右侧是T+1</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">//每日白条额度激活后的用户在之后60天内首次申请提现所在天数区间(额度批核当天、第2-7天、第8-14天、第15-30天、第31-60天、尚未提现)
//所以所有指标Qu数组第一个比较有价值，数据量较完整
function compare(){
	var interface_tixian_user_chart_date_list = ${tixian_user_chart_date_list};
	log.info(&quot;interface_tixian_user_chart_date_list = &quot;+interface_tixian_user_chart_date_list);
	var i = interface_tixian_user_chart_date_list.length - 1;
	var result = interface_tixian_user_chart_date_list[i];
	log.info(&quot;申请提现用户分析图-时间列右边界值 = &quot;+result);
	var actural = &quot;${ThirtyTime}&quot;;
	return result == actural ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="86、申请提现用户分析图-用户数-当天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">//每日白条额度激活后的用户在之后60天内首次申请提现所在天数区间(额度批核当天、第2-7天、第8-14天、第15-30天、第31-60天、尚未提现)
//所以所有指标Qu数组第一个比较有价值，数据量较完整
function compare(){
	var interface_tixian_user_chart_userNum1List = ${tixian_user_chart_userNum1List};
	log.info(&quot;interface_tixian_user_chart_userNum1List = &quot;+interface_tixian_user_chart_userNum1List);
	var result = interface_tixian_user_chart_userNum1List[29];
	log.info(&quot;申请提现用户分析图-用户数-当天 = &quot;+result);
	return result == 1 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="87、申请提现用户分析图-用户数-2-7天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userNum2List = ${tixian_user_chart_userNum2List};
	log.info(&quot;interface_tixian_user_chart_userNum2List = &quot;+interface_tixian_user_chart_userNum2List);
	var result = interface_tixian_user_chart_userNum2List[29];
	log.info(&quot;申请提现用户分析图-用户数-2-7天 = &quot;+result);
	return result == 2 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="88、申请提现用户分析图-用户数-8-14天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userNum3List = ${tixian_user_chart_userNum3List};
	log.info(&quot;interface_tixian_user_chart_userNum3List = &quot;+interface_tixian_user_chart_userNum3List);
	var result = interface_tixian_user_chart_userNum3List[29];
	log.info(&quot;申请提现用户分析图-用户数-8-14天 = &quot;+result);
	return result == 3 ;
	}
	compare();
	
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="89、申请提现用户分析图-用户数-15-30天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userNum4List = ${tixian_user_chart_userNum4List};
	log.info(&quot;interface_tixian_user_chart_userNum4List = &quot;+interface_tixian_user_chart_userNum4List);
	var result = interface_tixian_user_chart_userNum4List[29];
	log.info(&quot;申请提现用户分析图-用户数-15-30天 = &quot;+result);
	return result == 4 ;
	}
	compare();
	
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="90、申请提现用户分析图-用户数-31-60天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userNum5List = ${tixian_user_chart_userNum5List};
	log.info(&quot;interface_tixian_user_chart_userNum5List = &quot;+interface_tixian_user_chart_userNum5List);
	var result = interface_tixian_user_chart_userNum5List[29];
	log.info(&quot;申请提现用户分析图-用户数-31-60天 = &quot;+result);
	return result == 5 ;
	}
	compare();
	
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="91、申请提现用户分析图-用户数-尚未提现" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userNum6List = ${tixian_user_chart_userNum6List};
	log.info(&quot;interface_tixian_user_chart_userNum6List = &quot;+interface_tixian_user_chart_userNum6List);
	var result = interface_tixian_user_chart_userNum6List[29];
	log.info(&quot;申请提现用户分析图-用户数-尚未提现 = &quot;+result);
	return result == 6 ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="92、申请提现用户分析图-用户数占比-当天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate1List = ${tixian_user_chart_userRate1List};
	log.info(&quot;interface_tixian_user_chart_userRate1List = &quot;+interface_tixian_user_chart_userRate1List);
	var result = interface_tixian_user_chart_userRate1List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-当天 = &quot;+result);
	return result == &quot;4.76%&quot; ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="93、申请提现用户分析图-用户数占比-2-7天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate2List = ${tixian_user_chart_userRate2List};
	log.info(&quot;interface_tixian_user_chart_userRate2List = &quot;+interface_tixian_user_chart_userRate2List);
	var result = interface_tixian_user_chart_userRate2List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-2-7天 = &quot;+result);
	return result == &quot;9.52%&quot; ;
	}
	compare();</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="94、申请提现用户分析图-用户数占比-8-14天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate3List = ${tixian_user_chart_userRate3List};
	log.info(&quot;interface_tixian_user_chart_userRate3List = &quot;+interface_tixian_user_chart_userRate3List);
	var result = interface_tixian_user_chart_userRate3List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-8-14天 = &quot;+result);
	return result == &quot;14.29%&quot; ;
	}
	compare();</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="95、申请提现用户分析图-用户数占比-15-30天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate4List = ${tixian_user_chart_userRate4List};
	log.info(&quot;interface_tixian_user_chart_userRate4List = &quot;+interface_tixian_user_chart_userRate4List);
	var result = interface_tixian_user_chart_userRate4List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-15-30天 = &quot;+result);
	return result == &quot;19.05%&quot; ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="96、申请提现用户分析图-用户数占比-31-60天" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate5List = ${tixian_user_chart_userRate5List};
	log.info(&quot;interface_tixian_user_chart_userRate5List = &quot;+interface_tixian_user_chart_userRate5List);
	var result = interface_tixian_user_chart_userRate5List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-31-60天 = &quot;+result);
	return result == &quot;23.81%&quot; ;
	}
	compare();
	</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="97、申请提现用户分析图-用户数占比-尚未提现" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">function compare(){
	var interface_tixian_user_chart_userRate6List = ${tixian_user_chart_userRate6List};
	log.info(&quot;interface_tixian_user_chart_userRate6List = &quot;+interface_tixian_user_chart_userRate6List);
	var result = interface_tixian_user_chart_userRate6List[29];
	log.info(&quot;申请提现用户分析图-用户数占比-尚未提现 = &quot;+result);
	return result == &quot;28.57%&quot;;
	}
	compare();
	log.info(&quot;~~~~~~~~~~~~~【申请提现用户分析图】相关指标对比完毕！~~~~~~~~~~~~&quot;+ &quot;\n&quot;);
	log.info(&quot;=======================【易卡-白条专题】所有模块指标都对比完毕！========================&quot;+ &quot;\n&quot;);</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="测试" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1531297712000</longProp>
        <longProp name="ThreadGroup.end_time">1531297712000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="js 定义变量带特殊字符" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">function compareValue(){
	var interface_indexName_amt_daily_yes = &quot;订单金额(万元)&quot;;
	var actural_result = &quot;订单金额(万元)&quot;;
	return interface_indexName_amt_daily_yes == actural_result;
	}
	compareValue();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="直接打印 map" enabled="false">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import java.util.HashMap;

HashMap hm = new HashMap();
hm.put(&quot;cat&quot;,&quot;5&quot;);
hm.put(&quot;dog&quot;,&quot;3&quot;);
log.info(&quot;hm = &quot;+hm);

// 打印结果：hm = {cat=5, dog=3} </stringProp>
        </JSR223Sampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求图片下载" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">a.hiphotos.baidu.com</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/image/pic/item/4b90f603738da977b1e8c6c7ba51f8198718e313.jpg</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://a.hiphotos.baidu.com/image/pic/item/4b90f603738da977b1e8c6c7ba51f8198718e313.jpg</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="将请求得到的图片保存在本地" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.io.*;

byte[] result = prev.getResponseData();
String file_name = &quot;/Users/cuikai/Desktop/桌面背景/BaiDutest.jpg&quot;;
File file = new File(file_name);
FileOutputStream out = new FileOutputStream(file);
out.write(result);
out.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">List list = new ArrayList();
list.add(&quot;test&quot;);
list.add(&quot;gome&quot;);
list.add(&quot;tangbaofeng&quot;);
log.info(&quot;打印list内容&quot;+list);

List list_test = new ArrayList();
log.info(&quot;打印list_test内容&quot;+ list_test +&quot;默认内容是[]&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">//import org.testng.Assert;

String a=&quot;&quot;haha;
 Assert.assertEquals(1,2,&quot;wwewwwwwww&quot;+a);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
